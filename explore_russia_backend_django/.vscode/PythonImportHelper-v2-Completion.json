[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinLengthValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "PostSerializer",
        "importPath": "posts.serializers",
        "description": "posts.serializers",
        "isExtraImport": true,
        "detail": "posts.serializers",
        "documentation": {}
    },
    {
        "label": "PostSerializer",
        "importPath": "posts.serializers",
        "description": "posts.serializers",
        "isExtraImport": true,
        "detail": "posts.serializers",
        "documentation": {}
    },
    {
        "label": "PostSerializer",
        "importPath": "posts.serializers",
        "description": "posts.serializers",
        "isExtraImport": true,
        "detail": "posts.serializers",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "ModelSerializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "SearchFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "OrderingFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "ListAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "explore_russia_backend_django.asgi",
        "description": "explore_russia_backend_django.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "explore_russia_backend_django.asgi",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "env = environ.Env(\n    DEBUG=(bool),\n    SECRET_KEY=(str),\n    FRONT_HOST=(str),\n    POSTGRES_DB_NAME=(str),\n    POSTGRES_USERNAME=(str),\n    POSTGRES_PASSWORD=(str),\n    POSTGRES_HOST=(str),\n    POSTGRES_PORT=(int),\n)",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nenviron.Env.read_env(os.path.join(BASE_DIR, \".env\"))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = env(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = env(\"DEBUG\")\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "SECRET_KEY = env(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = env(\"DEBUG\")\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "DEBUG = env(\"DEBUG\")\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",\n    \"corsheaders\",\n    \"posts\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [env(\"FRONT_HOST\")]\nROOT_URLCONF = \"explore_russia_backend_django.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "ROOT_URLCONF = \"explore_russia_backend_django.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "WSGI_APPLICATION = \"explore_russia_backend_django.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql_psycopg2\",\n        \"NAME\": env(\"POSTGRES_DB_NAME\"),\n        \"USER\": env(\"POSTGRES_USERNAME\"),\n        \"PASSWORD\": env(\"POSTGRES_PASSWORD\"),\n        \"HOST\": env(\"POSTGRES_HOST\"),",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql_psycopg2\",\n        \"NAME\": env(\"POSTGRES_DB_NAME\"),\n        \"USER\": env(\"POSTGRES_USERNAME\"),\n        \"PASSWORD\": env(\"POSTGRES_PASSWORD\"),\n        \"HOST\": env(\"POSTGRES_HOST\"),\n        \"PORT\": env(\"POSTGRES_PORT\"),\n    }\n}",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "LANGUAGE_CODE = \"ru\"\nTIME_ZONE = \"Asia/Yekaterinburg\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "TIME_ZONE = \"Asia/Yekaterinburg\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_RENDERER_CLASSES\": (\"rest_framework.renderers.JSONRenderer\",),",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_RENDERER_CLASSES\": (\"rest_framework.renderers.JSONRenderer\",),\n    \"DEFAULT_PARSER_CLASSES\": (\"rest_framework.parsers.JSONParser\",),",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_RENDERER_CLASSES\": (\"rest_framework.renderers.JSONRenderer\",),\n    \"DEFAULT_PARSER_CLASSES\": (\"rest_framework.parsers.JSONParser\",),\n}",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_RENDERER_CLASSES\": (\"rest_framework.renderers.JSONRenderer\",),\n    \"DEFAULT_PARSER_CLASSES\": (\"rest_framework.parsers.JSONParser\",),\n}",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "explore_russia_backend_django.settings",
        "description": "explore_russia_backend_django.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_RENDERER_CLASSES\": (\"rest_framework.renderers.JSONRenderer\",),\n    \"DEFAULT_PARSER_CLASSES\": (\"rest_framework.parsers.JSONParser\",),\n}",
        "detail": "explore_russia_backend_django.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "explore_russia_backend_django.urls",
        "description": "explore_russia_backend_django.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"posts/\", include(\"posts.urls\")),\n    path(\"admin/\", admin.site.urls),\n]",
        "detail": "explore_russia_backend_django.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "explore_russia_backend_django.wsgi",
        "description": "explore_russia_backend_django.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "explore_russia_backend_django.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0001_initial",
        "description": "posts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Post\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "posts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0002_post_createdat_post_updatedat",
        "description": "posts.migrations.0002_post_createdat_post_updatedat",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"posts\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"post\",\n            name=\"createdAt\",\n            field=models.DateTimeField(\n                auto_now_add=True, default=django.utils.timezone.now",
        "detail": "posts.migrations.0002_post_createdat_post_updatedat",
        "documentation": {}
    },
    {
        "label": "PostSerializerTestCase",
        "kind": 6,
        "importPath": "posts.tests.test_posts_serializer",
        "description": "posts.tests.test_posts_serializer",
        "peekOfCode": "class PostSerializerTestCase(TestCase):\n    def test_correct(self):\n        post1 = Post.objects.create(\n            city=\"Город 1\", title=\"Город 1\", image=\"https://link1.ru\", text=\"Город 1\"\n        )\n        post2 = Post.objects.create(\n            city=\"Город 2\", title=\"Город 2\", image=\"https://link2.ru\", text=\"Город 2\"\n        )\n        post3 = Post.objects.create(\n            city=\"Город 3\", title=\"Город 3\", image=\"https://link3.ru\", text=\"Город 3\"",
        "detail": "posts.tests.test_posts_serializer",
        "documentation": {}
    },
    {
        "label": "PostsApiTestCase",
        "kind": 6,
        "importPath": "posts.tests.test_posts_view",
        "description": "posts.tests.test_posts_view",
        "peekOfCode": "class PostsApiTestCase(APITestCase):\n    def setUp(self):\n        self.post1 = Post.objects.create(\n            id=1, city=\"Город 1\", title=\"Город 1\", image=\"https://link1.ru\", text=\"Город 1\"\n        )\n        self.post2 = Post.objects.create(\n            id=2, city=\"Город 2\", title=\"Город 2\", image=\"https://link2.ru\", text=\"Город 2\"\n        )\n        self.post3 = Post.objects.create(\n            id=3, city=\"Город 3\", title=\"Город 3\", image=\"https://link3.ru\", text=\"Город 3\"",
        "detail": "posts.tests.test_posts_view",
        "documentation": {}
    },
    {
        "label": "PostsConfig",
        "kind": 6,
        "importPath": "posts.apps",
        "description": "posts.apps",
        "peekOfCode": "class PostsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"posts\"",
        "detail": "posts.apps",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "posts.models",
        "description": "posts.models",
        "peekOfCode": "class Post(models.Model):\n    city = models.CharField(validators=[MinLengthValidator(1)], max_length=70)\n    title = models.CharField(validators=[MinLengthValidator(1)], max_length=70)\n    image = models.URLField()\n    text = models.TextField()\n    createdAt = models.DateTimeField(auto_now_add=True)\n    updatedAt = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.title",
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "PostSerializer",
        "kind": 6,
        "importPath": "posts.serializers",
        "description": "posts.serializers",
        "peekOfCode": "class PostSerializer(ModelSerializer):\n    class Meta:\n        model = Post\n        fields = \"__all__\"",
        "detail": "posts.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "posts.urls",
        "description": "posts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", PostsListApiView.as_view(), name=\"posts\"),\n    path(\"last/\", PostsLastListApiView.as_view(), name=\"lastPosts\"),\n    path(\"<int:postId>/\", PostsDetailApiView.as_view(), name=\"postById\")\n]",
        "detail": "posts.urls",
        "documentation": {}
    },
    {
        "label": "PostsListApiView",
        "kind": 6,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "class PostsListApiView(ListAPIView):\n    queryset = Post.objects.all()\n    serializer_class = PostSerializer\n    filter_backends = [SearchFilter, OrderingFilter]\n    search_fields = [\"city\", \"title\", \"text\"]\n    ordering_fields = [\"id\", \"city\", \"title\"]\nclass PostsLastListApiView(ListAPIView):\n    queryset = Post.objects.all().order_by(\"-createdAt\")[:9]\n    serializer_class = PostSerializer\nclass PostsDetailApiView(ListAPIView):",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "PostsLastListApiView",
        "kind": 6,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "class PostsLastListApiView(ListAPIView):\n    queryset = Post.objects.all().order_by(\"-createdAt\")[:9]\n    serializer_class = PostSerializer\nclass PostsDetailApiView(ListAPIView):\n    def get_object(self, postId):\n        try:\n            return Post.objects.get(id=postId)\n        except Post.DoesNotExist:\n            return Response(status=404, message=\"Пост не найден\")\n    def get(self, requset, postId):",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "PostsDetailApiView",
        "kind": 6,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "class PostsDetailApiView(ListAPIView):\n    def get_object(self, postId):\n        try:\n            return Post.objects.get(id=postId)\n        except Post.DoesNotExist:\n            return Response(status=404, message=\"Пост не найден\")\n    def get(self, requset, postId):\n        post = self.get_object(postId)\n        serializer = PostSerializer(post)\n        return Response(serializer.data)",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\n        \"DJANGO_SETTINGS_MODULE\", \"explore_russia_backend_django.settings\"\n    )\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"",
        "detail": "manage",
        "documentation": {}
    }
]